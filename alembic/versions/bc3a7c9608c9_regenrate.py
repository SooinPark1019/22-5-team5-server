"""regenrate

Revision ID: bc3a7c9608c9
Revises: 165f683746a9
Create Date: 2025-01-16 13:18:46.030973

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'bc3a7c9608c9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blocked_token',
    sa.Column('token_id', sa.String(length=255), nullable=False),
    sa.Column('expired_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('token_id')
    )
    op.create_table('blog',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('blog_name', sa.String(length=100), nullable=False),
    sa.Column('address_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('main_image_url', sa.String(length=255), nullable=True),
    sa.Column('default_category_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', name='unique_user_blog')
    )
    op.create_table('notification',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('notification_type', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('checked', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.CheckConstraint('notification_type IN (1, 2, 3, 4, 5)', name='valid_notification_type'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blog_subscription',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('subscriber_id', sa.BigInteger(), nullable=False),
    sa.Column('subscribed_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['subscribed_id'], ['blog.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subscriber_id'], ['blog.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subscriber_id', 'subscribed_id', name='unique_subscription')
    )
    op.create_table('category',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('blog_id', sa.BigInteger(), nullable=False),
    sa.Column('parent_id', sa.BigInteger(), nullable=True),
    sa.CheckConstraint('level IN (1, 2)', name='valid_category_level'),
    sa.ForeignKeyConstraint(['blog_id'], ['blog.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'blog_id', name='unique_category_per_blog')
    )
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=False)
    op.create_table('Article',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('blog_id', sa.BigInteger(), nullable=False),
    sa.Column('category_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['blog_id'], ['blog.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Article_title'), 'Article', ['title'], unique=False)
    op.create_table('blog_like',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('blog_id', sa.BigInteger(), nullable=False),
    sa.Column('article_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['Article.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['blog_id'], ['blog.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('nickname', sa.String(length=20), nullable=True))
    op.alter_column('user', 'username',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True)
    op.alter_column('user', 'password',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True)
    op.create_index(op.f('ix_user_nickname'), 'user', ['nickname'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_nickname'), table_name='user')
    op.alter_column('user', 'password',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False)
    op.alter_column('user', 'username',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False)
    op.drop_column('user', 'nickname')
    op.drop_table('blog_like')
    op.drop_index(op.f('ix_Article_title'), table_name='Article')
    op.drop_table('Article')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    op.drop_table('blog_subscription')
    op.drop_table('notification')
    op.drop_table('blog')
    op.drop_table('blocked_token')
    # ### end Alembic commands ###
