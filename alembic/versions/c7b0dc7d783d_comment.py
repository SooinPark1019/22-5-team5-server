"""comment

Revision ID: c7b0dc7d783d
Revises: c2a7a1f933e8
Create Date: 2025-01-16 14:27:54.498429

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'c7b0dc7d783d'
down_revision: Union[str, None] = 'c2a7a1f933e8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('notification_type', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('checked', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.CheckConstraint('notification_type IN (1, 2, 3, 4, 5)', name='valid_notification_type'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('secret', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('article_id', sa.BigInteger(), nullable=True),
    sa.Column('blog_id', sa.BigInteger(), nullable=True),
    sa.Column('parent_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('(article_id IS NOT NULL OR blog_id IS NOT NULL)', name='check_article_or_blog'),
    sa.ForeignKeyConstraint(['article_id'], ['Article.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['blog_id'], ['blog.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_blog_id'), 'comment', ['blog_id'], unique=False)
    op.add_column('Article', sa.Column('description', sa.String(length=100), nullable=False))
    op.add_column('blog', sa.Column('default_category_id', sa.Integer(), nullable=False))
    op.alter_column('user', 'password',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'password',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False)
    op.drop_column('blog', 'default_category_id')
    op.drop_column('Article', 'description')
    op.drop_index(op.f('ix_comment_blog_id'), table_name='comment')
    op.drop_table('comment')
    op.drop_table('notification')
    # ### end Alembic commands ###
